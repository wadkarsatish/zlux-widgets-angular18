/*
  This program and the accompanying materials are
  made available under the terms of the Eclipse Public License v2.0 which accompanies
  this distribution, and is available at https://www.eclipse.org/legal/epl-v20.html
  
  SPDX-License-Identifier: EPL-2.0
  
  Copyright Contributors to the Zowe Project.
*/
import { NgModule, Component, Input, Output, EventEmitter } from "@angular/core";
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { ZluxButtonModule } from '../button/button.component';
import { ZluxInputTextModule } from '../inputtext/inputtext';
import { ZluxFlyoverModule } from '../flyover/flyover.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../button/button.component";
import * as i3 from "../inputtext/inputtext";
import * as i4 from "../flyover/flyover.component";
// import '../../assets/images/FirstPage.svg';
// import '../../assets/images/NextPage.svg';
// import '../../assets/images/PrevPage.svg';
export class ZluxPaginatorComponent {
    constructor() {
        this.rows = 0;
        this.totalRecords = 0;
        this.hasMoreRecords = false;
        this.onPageChange = new EventEmitter();
        this.onFetchMoreData = new EventEmitter();
        this.pageIndex = -1;
        this.loadedPageNumber = 0;
        this.isInputIncorrect = false;
        this.preventEvent = false;
    }
    get indexMax() {
        return this.totalRecords > (this.pageIndex + 1) * this.rows ? (this.pageIndex + 1) * this.rows : this.totalRecords;
    }
    get indexMin() {
        return this.indexMax > 0 ? this.pageIndex * this.rows + 1 : 0;
    }
    ngOnChanges(changes) {
        if (changes['rows']) {
            this.loadedPageNumber = Math.ceil(this.totalRecords / this.rows);
            if (this.loadedPageNumber === 0 || isNaN(this.loadedPageNumber))
                this.loadedPageNumber = 0;
            if (this.pageIndex >= this.loadedPageNumber) {
                this.pageIndex = this.loadedPageNumber - 1;
                this.pageChange();
            }
        }
    }
    ngAfterContentChecked() {
        this.loadedPageNumber = Math.ceil(this.totalRecords / this.rows);
        if (this.loadedPageNumber === 0 || isNaN(this.loadedPageNumber))
            this.loadedPageNumber = 0;
    }
    onChange(event) {
        let value = Number(event.target.value);
        if (value >= 1 && value <= this.loadedPageNumber) {
            if (this.pageIndex != value - 1) {
                this.pageIndex = value - 1;
                this.pageChange();
            }
            this.isInputIncorrect = false;
        }
        else {
            this.isInputIncorrect = true;
        }
    }
    onPrevButtonClick() {
        if (this.pageIndex <= 0) {
            return;
        }
        this.pageIndex--;
        this.isInputIncorrect = false;
        this.pageChange();
    }
    onNextButtonClick() {
        if (this.pageIndex + 1 >= this.loadedPageNumber && !this.hasMoreRecords) {
            return;
        }
        this.pageIndex++;
        this.isInputIncorrect = false;
        this.pageChange();
    }
    onFirstButtonClick() {
        this.pageIndex = 0;
        this.isInputIncorrect = false;
        this.pageChange();
    }
    pageChange() {
        if (!this.preventEvent && this.pageIndex >= 0) {
            this.onPageChange.emit({
                first: this.pageIndex * this.rows,
                rows: this.rows
            });
        }
    }
    changePage(pageIndex) {
        this.preventEvent = true;
        this.pageIndex = pageIndex;
        this.isInputIncorrect = false;
        this.preventEvent = false;
    }
    toLastPage() {
        if (this.pageIndex !== this.loadedPageNumber - 1) {
            this.pageIndex = this.loadedPageNumber - 1;
            this.isInputIncorrect = false;
            this.pageChange();
        }
    }
    fetchMoreData() {
        this.onFetchMoreData.emit();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.3", ngImport: i0, type: ZluxPaginatorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.1.3", type: ZluxPaginatorComponent, selector: "zlux-paginator", inputs: { rows: "rows", totalRecords: "totalRecords", hasMoreRecords: "hasMoreRecords" }, outputs: { onPageChange: "onPageChange", onFetchMoreData: "onFetchMoreData" }, usesOnChanges: true, ngImport: i0, template: "<!--\nThis program and the accompanying materials are\nmade available under the terms of the Eclipse Public License v2.0 which accompanies\nthis distribution, and is available at https://www.eclipse.org/legal/epl-v20.html\n\nSPDX-License-Identifier: EPL-2.0\n\nCopyright Contributors to the Zowe Project.\n-->\n\n<div class=\"paginator-area\">\n  <zlux-button buttonType=\"button\" class=\"first-button\" [disabled]=\"pageIndex <= 0\" (onClick)=\"onFirstButtonClick()\">\n    <!-- <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\">\n    <use xlink:href=\"#FirstPage\"></use>\n  </svg> -->\n    <img src=\"../../assets/images/FirstPage.svg\">\n  </zlux-button>\n  <zlux-button buttonType=\"button\" class=\"prev-button\" [disabled]=\"pageIndex <= 0\" (onClick)=\"onPrevButtonClick()\">\n    <!-- <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\">\n  <use xlink:href=\"#PrevPage\"></use>\n</svg> -->\n    <img src=\"../../assets/images/PrevPage.svg\">\n  </zlux-button>\n\n  <div class=\"page-area\">\n    <input type=\"text\" class=\"current-page-field\" [ngClass]=\"{ 'input-error': isInputIncorrect }\" zluxInputText\n      [value]=\"pageIndex + 1\" (change)=\"onChange($event)\">\n    <ng-container i18n=\"of preposition in clause n-m of total@@paginator\">of</ng-container>\n    @if (hasMoreRecords) {\n    <a href=\"#\" (click)=\"toLastPage()\" zluxFlyover [flyover]=\"fetchMoreFlyover\"> {{loadedPageNumber}}*</a>\n    } @else {\n    <a href=\"#\" (click)=\"toLastPage()\"> {{loadedPageNumber}}</a>\n    }\n  </div>\n  <zlux-button buttonType=\"button\" [disabled]=\"(pageIndex >= loadedPageNumber - 1) && !hasMoreRecords\"\n    (onClick)=\"onNextButtonClick()\">\n    <!-- <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\">\n    <use xlink:href=\"#NextPage\"></use>\n  </svg> -->\n    <img src=\"../../assets/images/NextPage.svg\">\n  </zlux-button>\n  <div class=\"right-page-area\">\n    {{indexMin}}-{{indexMax}} <ng-container i18n=\"of preposition in clause n-m of total@@paginator\">of</ng-container>\n    @if (hasMoreRecords) {\n    <a href=\"#\" (click)=\"toLastPage()\" zluxFlyover [flyover]=\"fetchMoreFlyover\"> {{totalRecords}}*</a>\n    } @else {\n    <a href=\"#\" (click)=\"toLastPage()\"> {{totalRecords}}</a>\n    }\n  </div>\n</div>\n<zlux-flyover #fetchMoreFlyover>\n  Not all items are loaded!\n  <br />\n  <a href=\"#\" (click)=\"fetchMoreData()\">Load More data</a>\n</zlux-flyover>\n\n\n<!--\nThis program and the accompanying materials are\nmade available under the terms of the Eclipse Public License v2.0 which accompanies\nthis distribution, and is available at https://www.eclipse.org/legal/epl-v20.html\n\nSPDX-License-Identifier: EPL-2.0\n\nCopyright Contributors to the Zowe Project.\n-->", styles: [":host{font-family:Helvetica,Open Sans,Arial,Lucida Grande,sans-serif}.paginator-area{height:46px;width:100%;flex:none;display:flex;align-items:center;flex-direction:row}.page-area{margin:0 1rem 0 .5rem}.current-page-field{flex:none;background-color:#fff;width:4rem;padding-left:.5rem;margin-right:.5rem}.right-page-area{flex:auto;text-align:right;padding-right:2rem}.input-error{border-color:red}zlux-button{margin:0;width:32px}zlux-button svg{flex:1 1 auto}zlux-button >>> button{padding:0!important;display:flex;flex-direction:row;fill:#157cbd}zlux-button >>> button:hover:not([disabled]),zlux-button >>> button:active:not([disabled]){fill:#fff;background-color:#0d5d8d}.first-button{margin-left:1rem;margin-right:-1px}.first-button >>> button{border-top-right-radius:0;border-bottom-right-radius:0}.prev-button >>> button{border-top-left-radius:0;border-bottom-left-radius:0}\n"], dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "component", type: i2.ZluxButtonComponent, selector: "zlux-button", inputs: ["buttonType", "label", "disabled", "callToAction", "lightSkin"], outputs: ["onClick"] }, { kind: "directive", type: i3.ZluxInputText, selector: "[zluxInputText]", inputs: ["dark"] }, { kind: "component", type: i4.ZluxFlyoverComponent, selector: "zlux-flyover", inputs: ["hideDelayMs"] }, { kind: "directive", type: i4.ZluxFlyover, selector: "[zluxFlyover]", inputs: ["flyover", "position", "showDelayMs", "zluxFlyoverDisabled"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.3", ngImport: i0, type: ZluxPaginatorComponent, decorators: [{
            type: Component,
            args: [{ selector: "zlux-paginator", template: "<!--\nThis program and the accompanying materials are\nmade available under the terms of the Eclipse Public License v2.0 which accompanies\nthis distribution, and is available at https://www.eclipse.org/legal/epl-v20.html\n\nSPDX-License-Identifier: EPL-2.0\n\nCopyright Contributors to the Zowe Project.\n-->\n\n<div class=\"paginator-area\">\n  <zlux-button buttonType=\"button\" class=\"first-button\" [disabled]=\"pageIndex <= 0\" (onClick)=\"onFirstButtonClick()\">\n    <!-- <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\">\n    <use xlink:href=\"#FirstPage\"></use>\n  </svg> -->\n    <img src=\"../../assets/images/FirstPage.svg\">\n  </zlux-button>\n  <zlux-button buttonType=\"button\" class=\"prev-button\" [disabled]=\"pageIndex <= 0\" (onClick)=\"onPrevButtonClick()\">\n    <!-- <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\">\n  <use xlink:href=\"#PrevPage\"></use>\n</svg> -->\n    <img src=\"../../assets/images/PrevPage.svg\">\n  </zlux-button>\n\n  <div class=\"page-area\">\n    <input type=\"text\" class=\"current-page-field\" [ngClass]=\"{ 'input-error': isInputIncorrect }\" zluxInputText\n      [value]=\"pageIndex + 1\" (change)=\"onChange($event)\">\n    <ng-container i18n=\"of preposition in clause n-m of total@@paginator\">of</ng-container>\n    @if (hasMoreRecords) {\n    <a href=\"#\" (click)=\"toLastPage()\" zluxFlyover [flyover]=\"fetchMoreFlyover\"> {{loadedPageNumber}}*</a>\n    } @else {\n    <a href=\"#\" (click)=\"toLastPage()\"> {{loadedPageNumber}}</a>\n    }\n  </div>\n  <zlux-button buttonType=\"button\" [disabled]=\"(pageIndex >= loadedPageNumber - 1) && !hasMoreRecords\"\n    (onClick)=\"onNextButtonClick()\">\n    <!-- <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\">\n    <use xlink:href=\"#NextPage\"></use>\n  </svg> -->\n    <img src=\"../../assets/images/NextPage.svg\">\n  </zlux-button>\n  <div class=\"right-page-area\">\n    {{indexMin}}-{{indexMax}} <ng-container i18n=\"of preposition in clause n-m of total@@paginator\">of</ng-container>\n    @if (hasMoreRecords) {\n    <a href=\"#\" (click)=\"toLastPage()\" zluxFlyover [flyover]=\"fetchMoreFlyover\"> {{totalRecords}}*</a>\n    } @else {\n    <a href=\"#\" (click)=\"toLastPage()\"> {{totalRecords}}</a>\n    }\n  </div>\n</div>\n<zlux-flyover #fetchMoreFlyover>\n  Not all items are loaded!\n  <br />\n  <a href=\"#\" (click)=\"fetchMoreData()\">Load More data</a>\n</zlux-flyover>\n\n\n<!--\nThis program and the accompanying materials are\nmade available under the terms of the Eclipse Public License v2.0 which accompanies\nthis distribution, and is available at https://www.eclipse.org/legal/epl-v20.html\n\nSPDX-License-Identifier: EPL-2.0\n\nCopyright Contributors to the Zowe Project.\n-->", styles: [":host{font-family:Helvetica,Open Sans,Arial,Lucida Grande,sans-serif}.paginator-area{height:46px;width:100%;flex:none;display:flex;align-items:center;flex-direction:row}.page-area{margin:0 1rem 0 .5rem}.current-page-field{flex:none;background-color:#fff;width:4rem;padding-left:.5rem;margin-right:.5rem}.right-page-area{flex:auto;text-align:right;padding-right:2rem}.input-error{border-color:red}zlux-button{margin:0;width:32px}zlux-button svg{flex:1 1 auto}zlux-button >>> button{padding:0!important;display:flex;flex-direction:row;fill:#157cbd}zlux-button >>> button:hover:not([disabled]),zlux-button >>> button:active:not([disabled]){fill:#fff;background-color:#0d5d8d}.first-button{margin-left:1rem;margin-right:-1px}.first-button >>> button{border-top-right-radius:0;border-bottom-right-radius:0}.prev-button >>> button{border-top-left-radius:0;border-bottom-left-radius:0}\n"] }]
        }], propDecorators: { rows: [{
                type: Input
            }], totalRecords: [{
                type: Input
            }], hasMoreRecords: [{
                type: Input
            }], onPageChange: [{
                type: Output
            }], onFetchMoreData: [{
                type: Output
            }] } });
export class ZluxPaginatorModule {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.3", ngImport: i0, type: ZluxPaginatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "18.1.3", ngImport: i0, type: ZluxPaginatorModule, declarations: [ZluxPaginatorComponent], imports: [FormsModule, CommonModule, ZluxButtonModule, ZluxInputTextModule, ZluxFlyoverModule], exports: [ZluxPaginatorComponent] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "18.1.3", ngImport: i0, type: ZluxPaginatorModule, imports: [FormsModule, CommonModule, ZluxButtonModule, ZluxInputTextModule, ZluxFlyoverModule] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.3", ngImport: i0, type: ZluxPaginatorModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [FormsModule, CommonModule, ZluxButtonModule, ZluxInputTextModule, ZluxFlyoverModule],
                    exports: [ZluxPaginatorComponent],
                    declarations: [ZluxPaginatorComponent]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,