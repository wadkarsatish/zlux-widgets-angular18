/*
  This program and the accompanying materials are
  made available under the terms of the Eclipse Public License v2.0 which accompanies
  this distribution, and is available at https://www.eclipse.org/legal/epl-v20.html
  
  SPDX-License-Identifier: EPL-2.0
  
  Copyright Contributors to the Zowe Project.
*/
import { NgModule, Component } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ZluxPopupPanelModule } from '../popup-panel/popup-panel.component';
import { ZluxErrorReportModule } from '../error-report/error-report.component';
import { ZluxPopupManagerService } from '../../services/popup-manager.service';
import * as i0 from "@angular/core";
import * as i1 from "../../services/popup-manager.service";
import * as i2 from "@angular/common";
import * as i3 from "../popup-panel/popup-panel.component";
import * as i4 from "../error-report/error-report.component";
export class ZluxPopupManagerComponent {
    static { this.REPORT_VISIBLE_TIMEOUT = 15; }
    constructor(popupManager) {
        this.popupManager = popupManager;
        this.blockCount = 0;
        this.currentErrorBlocking = null;
        this.currentErrorNonblocking = null;
        this.errors = [];
        popupManager.on('block', this.block.bind(this));
        popupManager.on('unblock', this.unblock.bind(this));
        popupManager.on('createReport', (error) => this.createReport(error));
        popupManager.on('removeReport', (id) => this.removeReport(id));
    }
    updateErrors() {
        if (this.currentErrorBlocking == null) {
            const found = this.errors.find(elem => elem.modal);
            if (found) {
                this.currentErrorBlocking = found;
                this.errors = this.errors.filter(i => i !== found);
            }
        }
        if (this.currentErrorNonblocking == null) {
            const found = this.errors.find(elem => !elem.modal);
            if (found) {
                this.currentErrorNonblocking = found;
                this.errors = this.errors.filter(i => i !== found);
            }
        }
    }
    createReport(error) {
        error = Object.assign({}, error);
        error.buttonCaptions = error.buttons.map(b => b.caption);
        this.errors.push(error);
        if (error.modal) {
            this.block();
        }
        this.updateErrors();
    }
    removeReport(id) {
        if (this.currentErrorBlocking && this.currentErrorBlocking.id === id) {
            this.closeForegroundError(this.currentErrorBlocking);
        }
        else if (this.currentErrorNonblocking && this.currentErrorNonblocking.id === id) {
            this.closeForegroundError(this.currentErrorNonblocking);
        }
        else {
            for (let i = 0; i < this.errors.length; i++) {
                if (this.errors[i].id === id) {
                    this.errors.splice(i, 1);
                }
            }
        }
    }
    block() {
        this.blockCount++;
    }
    unblock() {
        this.blockCount--;
    }
    closeForegroundError(error) {
        if (error === this.currentErrorBlocking) {
            this.unblock();
            this.currentErrorBlocking = null;
        }
        else {
            this.currentErrorNonblocking = null;
        }
        this.updateErrors();
    }
    onChoose(error, buttonCaption) {
        const button = error.buttons.find(b => b.caption === buttonCaption);
        if (button.closeReport) {
            this.closeForegroundError(error);
        }
        error.subject.next(buttonCaption);
    }
    getClass() {
        const _class = 'popup-shadow-hover';
        if (this.blockCount === 0) {
            return _class + ' hidden';
        }
        return null;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.3", ngImport: i0, type: ZluxPopupManagerComponent, deps: [{ token: i1.ZluxPopupManagerService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.1.3", type: ZluxPopupManagerComponent, selector: "zlux-popup-manager", ngImport: i0, template: "\n\n<!--\nThis program and the accompanying materials are\nmade available under the terms of the Eclipse Public License v2.0 which accompanies\nthis distribution, and is available at https://www.eclipse.org/legal/epl-v20.html\n\nSPDX-License-Identifier: EPL-2.0\n\nCopyright Contributors to the Zowe Project.\n-->\n\n@if (blockCount > 0) {\n  <div ngClass=\"popup-shadow-hover\">\n    @if (currentErrorBlocking) {\n      <zlux-popup-panel\n        [modal]=\"false\"\n        [autoShow]=\"true\"\n        [ignoreVeil]=\"true\"\n        ngClass=\"attachToCenter\"\n        >\n        <zlux-error-report\n          [severity]=\"currentErrorBlocking.severity\"\n          [title]=\"currentErrorBlocking.title\"\n          [timestamp]=\"currentErrorBlocking.timestamp\"\n          [buttons]=\"currentErrorBlocking.buttonCaptions\"\n          (action)=\"onChoose(currentErrorBlocking, $event)\"\n          [theme]=\"currentErrorBlocking.theme\"\n          [style]=\"currentErrorBlocking.style\"\n          [callToAction]=\"currentErrorBlocking.callToAction\"\n          >\n          {{currentErrorBlocking.text}}\n        </zlux-error-report>\n      </zlux-popup-panel>\n    }\n  </div>\n}\n@if (currentErrorNonblocking) {\n  <zlux-popup-panel\n    [modal]=\"false\"\n    [autoShow]=\"true\"\n    [blockDisplay]=\"true\"\n    ngClass=\"attachToCorner\"\n    >\n    <zlux-error-report\n      [severity]=\"currentErrorNonblocking.severity\"\n      [title]=\"currentErrorNonblocking.title\"\n      [timestamp]=\"currentErrorNonblocking.timestamp\"\n      [buttons]=\"currentErrorNonblocking.buttonCaptions\"\n      (action)=\"onChoose(currentErrorNonblocking, $event)\"\n      [theme]=\"currentErrorNonblocking.theme\"\n      [style]=\"currentErrorNonblocking.style\"\n      [callToAction]=\"currentErrorNonblocking.callToAction\"\n      >\n      {{currentErrorNonblocking.text}}\n    </zlux-error-report>\n  </zlux-popup-panel>\n}\n\n\n<!--\nThis program and the accompanying materials are\nmade available under the terms of the Eclipse Public License v2.0 which accompanies\nthis distribution, and is available at https://www.eclipse.org/legal/epl-v20.html\n\nSPDX-License-Identifier: EPL-2.0\n\nCopyright Contributors to the Zowe Project.\n-->\n\n", styles: [".popup-shadow-hover{background-color:#0006;position:absolute;inset:0;z-index:100}.hidden{display:none}.attachToCenter{min-width:400px;display:inline-block;position:absolute;left:50%;top:50%;transform:translate(-50%,-50%)}.attachToCorner{min-width:400px;max-width:650px;position:absolute;right:20px;bottom:20px}\n"], dependencies: [{ kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "component", type: i3.ZluxPopupPanelComponent, selector: "zlux-popup-panel", inputs: ["modal", "autoShow", "ignoreVeil", "blockDisplay"] }, { kind: "component", type: i4.ZluxErrorReportComponent, selector: "zlux-error-report", inputs: ["severity", "title", "theme", "style", "buttons", "timestamp", "callToAction"], outputs: ["action"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.3", ngImport: i0, type: ZluxPopupManagerComponent, decorators: [{
            type: Component,
            args: [{ selector: "zlux-popup-manager", template: "\n\n<!--\nThis program and the accompanying materials are\nmade available under the terms of the Eclipse Public License v2.0 which accompanies\nthis distribution, and is available at https://www.eclipse.org/legal/epl-v20.html\n\nSPDX-License-Identifier: EPL-2.0\n\nCopyright Contributors to the Zowe Project.\n-->\n\n@if (blockCount > 0) {\n  <div ngClass=\"popup-shadow-hover\">\n    @if (currentErrorBlocking) {\n      <zlux-popup-panel\n        [modal]=\"false\"\n        [autoShow]=\"true\"\n        [ignoreVeil]=\"true\"\n        ngClass=\"attachToCenter\"\n        >\n        <zlux-error-report\n          [severity]=\"currentErrorBlocking.severity\"\n          [title]=\"currentErrorBlocking.title\"\n          [timestamp]=\"currentErrorBlocking.timestamp\"\n          [buttons]=\"currentErrorBlocking.buttonCaptions\"\n          (action)=\"onChoose(currentErrorBlocking, $event)\"\n          [theme]=\"currentErrorBlocking.theme\"\n          [style]=\"currentErrorBlocking.style\"\n          [callToAction]=\"currentErrorBlocking.callToAction\"\n          >\n          {{currentErrorBlocking.text}}\n        </zlux-error-report>\n      </zlux-popup-panel>\n    }\n  </div>\n}\n@if (currentErrorNonblocking) {\n  <zlux-popup-panel\n    [modal]=\"false\"\n    [autoShow]=\"true\"\n    [blockDisplay]=\"true\"\n    ngClass=\"attachToCorner\"\n    >\n    <zlux-error-report\n      [severity]=\"currentErrorNonblocking.severity\"\n      [title]=\"currentErrorNonblocking.title\"\n      [timestamp]=\"currentErrorNonblocking.timestamp\"\n      [buttons]=\"currentErrorNonblocking.buttonCaptions\"\n      (action)=\"onChoose(currentErrorNonblocking, $event)\"\n      [theme]=\"currentErrorNonblocking.theme\"\n      [style]=\"currentErrorNonblocking.style\"\n      [callToAction]=\"currentErrorNonblocking.callToAction\"\n      >\n      {{currentErrorNonblocking.text}}\n    </zlux-error-report>\n  </zlux-popup-panel>\n}\n\n\n<!--\nThis program and the accompanying materials are\nmade available under the terms of the Eclipse Public License v2.0 which accompanies\nthis distribution, and is available at https://www.eclipse.org/legal/epl-v20.html\n\nSPDX-License-Identifier: EPL-2.0\n\nCopyright Contributors to the Zowe Project.\n-->\n\n", styles: [".popup-shadow-hover{background-color:#0006;position:absolute;inset:0;z-index:100}.hidden{display:none}.attachToCenter{min-width:400px;display:inline-block;position:absolute;left:50%;top:50%;transform:translate(-50%,-50%)}.attachToCorner{min-width:400px;max-width:650px;position:absolute;right:20px;bottom:20px}\n"] }]
        }], ctorParameters: () => [{ type: i1.ZluxPopupManagerService }] });
export class ZluxPopupManagerModule {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.3", ngImport: i0, type: ZluxPopupManagerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "18.1.3", ngImport: i0, type: ZluxPopupManagerModule, declarations: [ZluxPopupManagerComponent], imports: [CommonModule, ZluxPopupPanelModule, ZluxErrorReportModule], exports: [ZluxPopupManagerComponent] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "18.1.3", ngImport: i0, type: ZluxPopupManagerModule, providers: [ZluxPopupManagerService], imports: [CommonModule, ZluxPopupPanelModule, ZluxErrorReportModule] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.3", ngImport: i0, type: ZluxPopupManagerModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ZluxPopupPanelModule, ZluxErrorReportModule],
                    exports: [ZluxPopupManagerComponent],
                    declarations: [ZluxPopupManagerComponent],
                    providers: [ZluxPopupManagerService]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,